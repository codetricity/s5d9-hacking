{
    "docs": [
        {
            "location": "/",
            "text": "Hacking the Renesas S5D9 IoT Fast Prototyping Kit\n\n\n\n\nThe Board and Tools\n\n\nThe board is incredible. It costs $35 and Renesas is currently\noffering a \n$20 coupon\n, \nwhich reduces the cost to $15 plus shipping (from the factory in China). In addition to the\nRenesas S5D9 MCU, you get a lot of onboard sensors:\n\n\n\n\nBosch BMC 150 6-Axis sensor\n\n\nAMS ENS210 environmental sensor\n\n\nTE Connectivity MS5637-02BA03 barometric pressure sensor\n\n\nKnowles SPU0414HR5H-SB amplified SiSonic microphone\n\n\n\n\nThe board also has 3 colored LEDs plus Ethernet, USB, PMOD 2 Grove connectors and\na JTAG connector. \n\n\nPrevious kits with this level of peripherals would have cost $150 6 months ago and \n$500 a few years ago. \n\n\nRenesas reduced costs by including sensors on the board and made\n several smart design trade-offs. These decisions made \n the board even more attractive to hackers. At the current price of \n $15 (after discount, but without\nshipping), it's an astounding price drop and a compelling value.\n\n\nThe S5D9 kit does not come with these components:\n\n\n\n\nno LCD touchscreen (which is fine for most projects and you can add it's possible to hack one on later). The previous S3A7 kit\ncame with a New Haven 2.4\" LCD. It made the board bigger and more expensive.\n\n\nno Segger debugger. The S3A7 kit came with a J-Link Lite Cortex-M 9-Pin debugger. The board comes with a bootloader. You can use a normal USB cable to load binaries on the board. \n\n\nno USB or Ethernet cables. This is no problem as the cables are standard and cheap.\n\n\n\n\nThe board is economical way to learn Synergy, which is an amazing embedded development environment\nfor professionals. It's also a\ngreat way to learn about cloud-based IoT systems like Renesas Data Monitoring (Bug Labs) and\nRenesas Data Intelligence (Medium One).\n\n\nThe design files for the board are \nopen sourced, enabling you to use the board design as a base to develop your own IoT device.",
            "title": "Board and Dev Tools"
        },
        {
            "location": "/#hacking-the-renesas-s5d9-iot-fast-prototyping-kit",
            "text": "",
            "title": "Hacking the Renesas S5D9 IoT Fast Prototyping Kit"
        },
        {
            "location": "/#the-board-and-tools",
            "text": "The board is incredible. It costs $35 and Renesas is currently\noffering a  $20 coupon , \nwhich reduces the cost to $15 plus shipping (from the factory in China). In addition to the\nRenesas S5D9 MCU, you get a lot of onboard sensors:   Bosch BMC 150 6-Axis sensor  AMS ENS210 environmental sensor  TE Connectivity MS5637-02BA03 barometric pressure sensor  Knowles SPU0414HR5H-SB amplified SiSonic microphone   The board also has 3 colored LEDs plus Ethernet, USB, PMOD 2 Grove connectors and\na JTAG connector.   Previous kits with this level of peripherals would have cost $150 6 months ago and \n$500 a few years ago.   Renesas reduced costs by including sensors on the board and made\n several smart design trade-offs. These decisions made \n the board even more attractive to hackers. At the current price of \n $15 (after discount, but without\nshipping), it's an astounding price drop and a compelling value.  The S5D9 kit does not come with these components:   no LCD touchscreen (which is fine for most projects and you can add it's possible to hack one on later). The previous S3A7 kit\ncame with a New Haven 2.4\" LCD. It made the board bigger and more expensive.  no Segger debugger. The S3A7 kit came with a J-Link Lite Cortex-M 9-Pin debugger. The board comes with a bootloader. You can use a normal USB cable to load binaries on the board.   no USB or Ethernet cables. This is no problem as the cables are standard and cheap.   The board is economical way to learn Synergy, which is an amazing embedded development environment\nfor professionals. It's also a\ngreat way to learn about cloud-based IoT systems like Renesas Data Monitoring (Bug Labs) and\nRenesas Data Intelligence (Medium One).  The design files for the board are \nopen sourced, enabling you to use the board design as a base to develop your own IoT device.",
            "title": "The Board and Tools"
        },
        {
            "location": "/hackingpaths/",
            "text": "With so many options, getting started hacking the board can be bewildering. I recommend\nyou follow the sequence below in the order presented. Go to the free site\n\nIoTcommunity.io\n for tutorials that will get you started.\n\n\n\n\nData Monitoring\n (Bug Labs default system image)\n\n\nData Intelligence\n (Medium One binaries and cloud-based workflows)\n\n\nBuild your custom image (Professional C/C++ development system)\n\n\nCustom image that uses bootloader (\nPut binary here\n folder)\n\n\nCustom image that replaces bootloader\n\n\n\n\n\n\nDesigning your own board",
            "title": "Hacking Paths"
        },
        {
            "location": "/requirements/",
            "text": "Hacking requirements\n\n\nOS\n\n\nAs of 7/29/2017, the board cannot mount on a Mac.  You need Windows 7 or 10\nto really use the board and tools. You can mount the board on Linux, but you\nwill not be able to use Synergy. \n\n\nData Monitoring and Data Intelligence\n\n\n\n\nEthernet with Internet access\n\n\nUSB cable to power the board (you can power it from your laptop)\n\n\nweb browser to display dashboard \n\n\n\n\nSynergy\n\n\n\n\nSynergy Software Package (SSP)\n\n\ne2 Studio ISDE\n\n\n\n\nRestoring Factory Image\n\n\n\n\nS5 LCM Bootloader Factory Image\n\n\nUSB cable\n\n\njumper and wires\n\n\n\n\nBuilding new binary\n\n\n\n\nSynergy\n\n\nUSB cable\n\n\n\n\nReplacing Bootloader\n\n\n\n\nJ-Link Software\n pack that contains J-Flash Lite\n\n\nSEGGER J-Link JTAG debugger\n\n\n\n\nThe unit below came with the S3A7 IoT Fast Prototyping Kit. I heard that it normally \ncosts $30 separately. The unit below works.\n\n\n\n\nI went online and saw similar units on sale on eBay for $11 to $17. I do not know if \nany of the units on eBay work. If you have a unit that works, please post information.\n\n\nDesigning Your Own Board\n\n\n\n\nDesign files for S5D9 IoT Fast Prototyping Kit\n\n\nPCB design software like Altium Designer, Eagle, or many others\n\n\nManufacturing partner like \nSeeed Studio Fusion",
            "title": "Requirements"
        },
        {
            "location": "/requirements/#hacking-requirements",
            "text": "",
            "title": "Hacking requirements"
        },
        {
            "location": "/requirements/#os",
            "text": "As of 7/29/2017, the board cannot mount on a Mac.  You need Windows 7 or 10\nto really use the board and tools. You can mount the board on Linux, but you\nwill not be able to use Synergy.",
            "title": "OS"
        },
        {
            "location": "/requirements/#data-monitoring-and-data-intelligence",
            "text": "Ethernet with Internet access  USB cable to power the board (you can power it from your laptop)  web browser to display dashboard",
            "title": "Data Monitoring and Data Intelligence"
        },
        {
            "location": "/requirements/#synergy",
            "text": "Synergy Software Package (SSP)  e2 Studio ISDE",
            "title": "Synergy"
        },
        {
            "location": "/requirements/#restoring-factory-image",
            "text": "S5 LCM Bootloader Factory Image  USB cable  jumper and wires",
            "title": "Restoring Factory Image"
        },
        {
            "location": "/requirements/#building-new-binary",
            "text": "Synergy  USB cable",
            "title": "Building new binary"
        },
        {
            "location": "/requirements/#replacing-bootloader",
            "text": "J-Link Software  pack that contains J-Flash Lite  SEGGER J-Link JTAG debugger   The unit below came with the S3A7 IoT Fast Prototyping Kit. I heard that it normally \ncosts $30 separately. The unit below works.   I went online and saw similar units on sale on eBay for $11 to $17. I do not know if \nany of the units on eBay work. If you have a unit that works, please post information.",
            "title": "Replacing Bootloader"
        },
        {
            "location": "/requirements/#designing-your-own-board",
            "text": "Design files for S5D9 IoT Fast Prototyping Kit  PCB design software like Altium Designer, Eagle, or many others  Manufacturing partner like  Seeed Studio Fusion",
            "title": "Designing Your Own Board"
        },
        {
            "location": "/monitoring/starting/",
            "text": "Data Monitoring powered by BugLabs\n\n\nStep 1\n\n\n\n\nTake the board out of the box and connect the USB port on the board to a USB port on your laptop.  This will power up the board and the board will enumerate as a USB drive on your laptop.  \n\n\n\n\n\n\nNOTE: The board will not show up as a USB drive on Macs. You only need to complete Step 2 to get one file off the board with the device name. After that, the USB is only for power. Once you get the name from \"ThingName.txt\" file, you can use a \nMac to view the dashboard.\n\n\n\n\n\n\nNow connect the Ethernet port on the board to an Ethernet port on a network router which is internet enabled. \n\n\n\n\n\n\n\n\nStep 2\n\n\n\n\nClick on the USB drive which represents your board.  \n\n\n\n\n\n\n\n\nFind the \u201cThingName.txt\u201d file and open it.  The file will contain the Thing Name for your board.  \n\n\nNow open a web browser and go to www.renesas.com/iotsandbox/S5D9/getstarted.  \n\n\nEnter your board\u2019s Thing Name into the field marked \u201cEnter Thing Name here\u2026\u201d and press the \u201cTry it now!\u201d button. \n\n\n\n\n\n\nAt this point, you should see sensor data from your board streaming to the dashboard at an update rate of approximately once per second.\n\n\n\n\nNOTE: if you don't see any sensor data after 3 minutes, unset and then set your Board ID again.\n\n\n\n\n\n\nYou can shake the board to watch the accelerometer readings change or snap your fingers and watch the sound level change.  You can also click on the button in the browser marked \u201cRED LED\u201d and watch it turn on the LED on your board.  \n\n\n\n\nUsing Freeboard\n\n\nFreeboard\n is a web-based visualization tool used for displaying and interacting with data. Freeboard is open-source and fully-customizable, allowing the user to create rich Internet of Things applications.\n\n\nSign up for a Renesas Freeboard account to do more:\n\nhttps://renesas.freeboard.io/signup\n\n\nAlready Have a Freeboard Account?\n\n\nIf you already have a Freeboard account through Renesas, you must sign in through \n\n\nhttps://renesas.freeboard.io/login\n\n\n\n\nIf you get lost, just remember to go to \n\nhttps://renesas.freeboard.io/\n\n\nCreate a New Freeboard\n\n\n\n\nDatasources\n\n\nYour Renesas S5D9 IoT Fast Prototyping Kit comes with software that allows the device to connect to \nthe \ndweet messaging platform\n. We'll focus on connecting your Renesas board and a\nfew other data sources to Freeboard. We will not connect your mobile phone to Freeboard.\n\n\nIf you see the box below, close it.\n\n\n\n\nThe dweet platform is one possible datasource that freeboard can use to display data. Your dashboard may already be set up with this datasource, titled Renesas-Dweet. If \nit is, skip the next step. \n\n\nAdd Your S5D9 As the Data Source\n\n\nClick \nAdd\n to create a new data source.\n\n\n\n\nSelect \nRenesas Dweet\n as the \nTYPE\n.\n\n\n\n\nSpecify your personal Thing Name that was on the ThingName.txt file on your\nboard. If you're in an IoTcommunity.io workshop, the Thing Name may be \non a sticker on the back of the board. The name of the Dweet can be anything.\nWe'll name it Renesas-Dweet to make it easy to understand. Leave the key blank.\n\n\n\n\nImmediately after I create my data source, it's automatically updated. My board is \nplugged into Ethernet and sending data.\n\n\n\n\nAdd a pane.\n\n\n\n\nAdd a 3rd party API as Data Source\n\n\nTo add another datasource, such as a 3rd party API, Click on the ADD button.\n\n\n\n\nNext, choose the datasource you wish to connect. For example, choose the JSON datasource to add a 3rd party web API. In the following example, we choose the Weather datasource.\n\n\n\n\nFill out the appropriate details, and click on SAVE.\n\n\n\n\nWidgets\n\n\nThe freeboard platform comes with a standard set of widgets to use for visualizing data.  To add a new widget to your dashboard, click on the Add Pane button:\n\n\n\n\nA new pane will be added to the top left of your dashboard. \n\n\nClick on the + sign in the header of your new pane.  A selection popup will appear:\n\n\n\n\nSelect the widget type you wish to use (in our case we use the gauge).\n\n\n\n\nFill out the information in the widget setup screen, then click SAVE.\n\n\n\n\nNext step, keep adding more datasources and widgets, then Share your dashboard.\n\n\nOne last note: Bug Labs provides a set of off-the-shelf widgets to use, however, the user is able to add new widgets and datasource types by adding plugins to the Developer Console.\n\n\n\n\nDocumentation for creating new plugins can be found within the Developer Console.\n\n\nLocation Simulation\n\n\nGo to this link and enter your thing name in the box on the upper left corner.\n\n\nhttps://renesas.freeboard.io/board/cSyXRK\n\n\n\n\n\n\nHelpful Links\n\n\n\n\nFreeboard Open Source Repo\n\n\nDweetPro Production ready APIs and UI\n\n\nData Monitoring developer area",
            "title": "Getting Started"
        },
        {
            "location": "/monitoring/starting/#data-monitoring-powered-by-buglabs",
            "text": "",
            "title": "Data Monitoring powered by BugLabs"
        },
        {
            "location": "/monitoring/starting/#step-1",
            "text": "Take the board out of the box and connect the USB port on the board to a USB port on your laptop.  This will power up the board and the board will enumerate as a USB drive on your laptop.      NOTE: The board will not show up as a USB drive on Macs. You only need to complete Step 2 to get one file off the board with the device name. After that, the USB is only for power. Once you get the name from \"ThingName.txt\" file, you can use a \nMac to view the dashboard.    Now connect the Ethernet port on the board to an Ethernet port on a network router which is internet enabled.",
            "title": "Step 1"
        },
        {
            "location": "/monitoring/starting/#step-2",
            "text": "Click on the USB drive which represents your board.       Find the \u201cThingName.txt\u201d file and open it.  The file will contain the Thing Name for your board.    Now open a web browser and go to www.renesas.com/iotsandbox/S5D9/getstarted.    Enter your board\u2019s Thing Name into the field marked \u201cEnter Thing Name here\u2026\u201d and press the \u201cTry it now!\u201d button.     At this point, you should see sensor data from your board streaming to the dashboard at an update rate of approximately once per second.   NOTE: if you don't see any sensor data after 3 minutes, unset and then set your Board ID again.    You can shake the board to watch the accelerometer readings change or snap your fingers and watch the sound level change.  You can also click on the button in the browser marked \u201cRED LED\u201d and watch it turn on the LED on your board.",
            "title": "Step 2"
        },
        {
            "location": "/monitoring/starting/#using-freeboard",
            "text": "Freeboard  is a web-based visualization tool used for displaying and interacting with data. Freeboard is open-source and fully-customizable, allowing the user to create rich Internet of Things applications.  Sign up for a Renesas Freeboard account to do more: https://renesas.freeboard.io/signup",
            "title": "Using Freeboard"
        },
        {
            "location": "/monitoring/starting/#already-have-a-freeboard-account",
            "text": "If you already have a Freeboard account through Renesas, you must sign in through   https://renesas.freeboard.io/login   If you get lost, just remember to go to  https://renesas.freeboard.io/",
            "title": "Already Have a Freeboard Account?"
        },
        {
            "location": "/monitoring/starting/#create-a-new-freeboard",
            "text": "",
            "title": "Create a New Freeboard"
        },
        {
            "location": "/monitoring/starting/#datasources",
            "text": "Your Renesas S5D9 IoT Fast Prototyping Kit comes with software that allows the device to connect to \nthe  dweet messaging platform . We'll focus on connecting your Renesas board and a\nfew other data sources to Freeboard. We will not connect your mobile phone to Freeboard.  If you see the box below, close it.   The dweet platform is one possible datasource that freeboard can use to display data. Your dashboard may already be set up with this datasource, titled Renesas-Dweet. If \nit is, skip the next step.",
            "title": "Datasources"
        },
        {
            "location": "/monitoring/starting/#add-your-s5d9-as-the-data-source",
            "text": "Click  Add  to create a new data source.   Select  Renesas Dweet  as the  TYPE .   Specify your personal Thing Name that was on the ThingName.txt file on your\nboard. If you're in an IoTcommunity.io workshop, the Thing Name may be \non a sticker on the back of the board. The name of the Dweet can be anything.\nWe'll name it Renesas-Dweet to make it easy to understand. Leave the key blank.   Immediately after I create my data source, it's automatically updated. My board is \nplugged into Ethernet and sending data.   Add a pane.",
            "title": "Add Your S5D9 As the Data Source"
        },
        {
            "location": "/monitoring/starting/#add-a-3rd-party-api-as-data-source",
            "text": "To add another datasource, such as a 3rd party API, Click on the ADD button.   Next, choose the datasource you wish to connect. For example, choose the JSON datasource to add a 3rd party web API. In the following example, we choose the Weather datasource.   Fill out the appropriate details, and click on SAVE.",
            "title": "Add a 3rd party API as Data Source"
        },
        {
            "location": "/monitoring/starting/#widgets",
            "text": "The freeboard platform comes with a standard set of widgets to use for visualizing data.  To add a new widget to your dashboard, click on the Add Pane button:   A new pane will be added to the top left of your dashboard.   Click on the + sign in the header of your new pane.  A selection popup will appear:   Select the widget type you wish to use (in our case we use the gauge).   Fill out the information in the widget setup screen, then click SAVE.   Next step, keep adding more datasources and widgets, then Share your dashboard.  One last note: Bug Labs provides a set of off-the-shelf widgets to use, however, the user is able to add new widgets and datasource types by adding plugins to the Developer Console.   Documentation for creating new plugins can be found within the Developer Console.",
            "title": "Widgets"
        },
        {
            "location": "/monitoring/starting/#location-simulation",
            "text": "Go to this link and enter your thing name in the box on the upper left corner.  https://renesas.freeboard.io/board/cSyXRK",
            "title": "Location Simulation"
        },
        {
            "location": "/monitoring/starting/#helpful-links",
            "text": "Freeboard Open Source Repo  DweetPro Production ready APIs and UI  Data Monitoring developer area",
            "title": "Helpful Links"
        },
        {
            "location": "/intelligence/overview/",
            "text": "The S5D9 IoT Fast Prototyping Kit ships with both a boatloader and \na default system image to connect to the Renesas Data Monitoring system (Bug Labs).\n\n\nTo use Data Intelligence (Medium One), you'll need to download a new binary to\nyour Windows workstation, then use the USB cable to move the binary from your\nWindows computer to the S5D9. \n\n\n\n\nNOTE: You cannot use a Mac for to move the binary.\n\n\n\n\nWith the S5D9 board plugged into USB only, the red LED of the board will\nbe on and the yellow LED will be flashing. The board will be trying to connect\nto the Renesas Data Monitoring system.\n\n\n\n\n\n\nNOTE: There's been reports of slow data transmission speeds with the Ethernet plugged in.\nLeave the Ethernet unplugged.\n\n\n\n\nDownload Data Intelligence Binary\n\n\nDownload\n\nMedium One's diagnostics-intelligence-s5d9.srec file.\n\n\nOn your Windows workstation, the S5D9 board will look like a USB drive. Move the binary you just \ndownloaded in the folder \nPut binary here\n.\n\n\n\n\n\n\nNOTE: This process could take 7 minutes. Even though the binary is only 1.2M and\nis moving data over USB, the process moves slowly.\n\n\n\n\nAfter 7 minutes, the transfer completes.\n\n\n\n\nConfigure Update Files\n\n\nIn the main directory, delete the file \nloaded.txt\n\n\n\n\nCreate a new file called \nupdate.txt\n\n\nAdd the name of the \n.srec\n file to the new file.\n\n\n\n\nPower Cycle Board\n\n\nWhen you power cycle the board, the \nupdate.txt\n file will be automatically deleted.\nA new \nloaded.txt\n file will be created. The \nloaded.txt\n file will contain\n\ndiagnostics-intelligence-s5d9.srec\n.",
            "title": "Overview and Installation"
        },
        {
            "location": "/intelligence/overview/#download-data-intelligence-binary",
            "text": "Download \nMedium One's diagnostics-intelligence-s5d9.srec file.  On your Windows workstation, the S5D9 board will look like a USB drive. Move the binary you just \ndownloaded in the folder  Put binary here .    NOTE: This process could take 7 minutes. Even though the binary is only 1.2M and\nis moving data over USB, the process moves slowly.   After 7 minutes, the transfer completes.",
            "title": "Download Data Intelligence Binary"
        },
        {
            "location": "/intelligence/overview/#configure-update-files",
            "text": "In the main directory, delete the file  loaded.txt   Create a new file called  update.txt  Add the name of the  .srec  file to the new file.",
            "title": "Configure Update Files"
        },
        {
            "location": "/intelligence/overview/#power-cycle-board",
            "text": "When you power cycle the board, the  update.txt  file will be automatically deleted.\nA new  loaded.txt  file will be created. The  loaded.txt  file will contain diagnostics-intelligence-s5d9.srec .",
            "title": "Power Cycle Board"
        },
        {
            "location": "/intelligence/diagnostics/",
            "text": "Activate\n your Renesas S5D9 Diagnostics Intelligence Kit. \n\n\n\n\nActivate\n\n\nAfter you press \nActivate\n it will take a few minutes for the system to send you an email.\n\n\nDownload m1config.txt from your email\n\n\nYou will receive two emails. Open the one with the subject line, \nYour S5D9 IoT Fast Prototyping Kit is activated\n.\n\n\n\n\nScroll to the bottom of the email to see the attachment. Download the attachment \nm1config.txt\n.\n\n\n\n\nMove m1config.txt to board\n\n\nCopy the file you received in your email to the S5D9 you have connected to your computer with USB.\n\n\n\n\nYou can optionally verify that the contents of the file on the S5D9 board match the \ncontents of the file on your workstation.\n\n\nAfter the board boots the LED light will be solid green.\n\n\nLog Into Renesa IoT Sandbox Data Intelligence\n\n\n[https://renesas-na-sandbox.mediumone.com/login]\n\n\n\n\nThe login information is in a separate email.\n\n\nAfter you log into the dashboard, select the project in the upper right. You named \nthe project during the activation step above.\n\n\nYou must also select a user from the drop down menu. It will be a long string of digits.\n\n\n\n\n\n\n\n\nOnce you have the user selected and can see the gauges, click on the \nSave\n button. Once\nyou Save the view, you do not have to select the user each time you log in.\n\n\n\n\nThere are two types of events sent from the board to Renesas IoT Sandbox:\n\n\nSummary Events\n\n\nThese events are always sent every 15 minutes by default. A summary event contains the average values from each of the sensor readings within the past 15 minutes. The sensors included are temperature, pressure, humidity, noise level, and vibration stats. To change the frequency of these summary events, view Appendix A .\n\n\nThreshold Events\n\n\nThese events are sent whenever a sensor reading passes a certain threshold.  To change these thresholds, view the Appendix A\n\n\nAt the top of the Dashboard, you will see a \nLast Value Table widget\n. This widget only records the last entered value of that tag, along with the observed at timestamp (in UTC). You can use this widget to see the last time the board status was \u2018on\u2019 and the last values for city, country, firmware version, wan ip, lan ip, and mac address. For this tutorial, first make sure that your board is connected by seeing the rows filled with the value and timestamps. If there is nothing in the \u2018value\u2019 and \u2018last observed at\u2019 columns,  your board has had problems connecting to the cloud. You may need to click the refresh icon \n\n\nAfter your board has been connected for at least 15 minutes, it\u2019s first summary event should be sent in. When this happens, the Gauge Widget on your Dashboard should be updated. These values are the averages of the sensor for the past 15 minutes. It will continue to be updated every time a summary event is received.\n\n\nNext, you will see a Table widget. This widget presents all the data from the Humidity, Noise, Pressure, and Temperature sensors sorted by most recent. Using this widget, you can see the sensor value changes over time as well as the last time the board sent an \u2018online event\u2019. Click the refresh button \n\n\n\n\nUnder the table widget is the Cross Filter Widget. This widget displays board vibration data for the past day. Furthermore, you can add filters based on time range and vibration levels. To see refresh the widget and see updated data, click the refresh button .To customize this widget, view the diagram below and the captions that correspond to the numbers.\n\n\n\n\n\n\nUser selector. Here, you select the randomly generated username for your board. The red box next to it is the Tag selector. By default, it is \u2018processed.vibration_status\u2019.\n\n\nDate selector. By default, it is the past 24 hours. You can customize the date range.\n\n\nFilter charts. These charts are used to filter your data in the main chart (#4).\n\n\nMain chart. Your values for the selected tag are displayed in this chart. You can filter the data by time of date, date range, and values by the filter charts (#3)\n\n\n\n\nThe last pre-set widget on the Dashboard is the User Input Widget. This widget does not display data but instead allows you to send data. For this tutorial, you will use this widget to control the LEDs in the next step. You will also use this widget to send a sample report later.\n\n\n\n\nTo learn more about widgets, check out Medium One's \nDashboard Widgets Documentation\n.\n\n\nLED Toggle and Blink\n\n\nNow we will send events from the cloud to the board to toggle and blink the LED lights.\n\n\nBlink\n\n\nOn the User Input widget, go to the box that says \u2018Blink\u2019. Type in the number of times you wish to make the LED blink; for demo purposes, pick a number under 10, then click \u2018Send Event\u2019.\n\n\nThe red LED on the board will blink the number of times you specified. You should also see this event appear in the \nReal Time Events Stream widget\n.\n\n\n\n\n\n\n\nToggle\n\n\nOn the User Input widget, go to the box that says \u2018Toggle\u2019. To turn on the yellow LED, type in \u20181\u2019.  Click \u2018Send Event\u2019. You should see this event appear in the Real Time Events Stream Widget. The yellow LED on the board will also turn on. To turn it off, type in \u20180\u2019 and click \u2018Send Event\u2019. If any number other than 0 or 1 is used, it will change states from off to on or vice versa.\n\n\nTo learn more about how toggle and blink works, view the \u2018LED Toggle and Blink\u2019 Workflow in Workflow Studio or view Appendix B .\n\n\n\n\nDaily Email Report\n\n\nThe first step to set up your daily report is to add your email to the workflow. To do this on Renesas IoT Sandbox, click on \u2018Workflow Studio\u2019 on the sidebar. Next, click on the \u2018Daily Report\u2019 workflow:\n\n\n\n\nInside of the workflow:\n\n\n\n\nDouble-click on \u2018Base Python\u2019 to edit this workflow\u2019s code. After the import lines, you should see a line:\n\n\n\u201crecipients = \u2018email@mediumone.com\u2019\u201d\n\n\n\nChange the email to your email. Click \u2018Save and Activate\u2019.\n\n\n\n\nNow that you\u2019ve got your email in the workflow, you can trigger the workflow to get a report. By default, the workflow is triggered daily at midnight (PT). If you wish to change this time, double-click the box labeled \u2018Daily\u2019 and change the settings there. For the tutorial, we will trigger this workflow now by sending the event {\u201csample_report\u201d: 0} through the Dashboard.\n\n\nBack on the Dashboard, scroll down until you see the User Input widget like below. Select your board\u2019s username on the user dropdown.\n\n\nTo trigger the Daily Report Workflow, click the \u2018Send Event\u2019 button that is under \u2018Send Sample Report\u2019.\n\n\nAfter a few seconds, you should have received a Daily Report in your email with statistics of the past 24 hours. \n\n\n\n\nThis report shows Temperature, Pressure, Humidity, Noise, and Vibration levels in Bar Charts. The sensor values are averaged and bucketed per hour.  There are also two pie charts that show the vibration status and board online status percentage. Lastly, there is a Geo map that provides your location based off of your ip address. Here is a sample report:",
            "title": "Diagnostics Intelligence Tutorial"
        },
        {
            "location": "/intelligence/diagnostics/#download-m1configtxt-from-your-email",
            "text": "You will receive two emails. Open the one with the subject line,  Your S5D9 IoT Fast Prototyping Kit is activated .   Scroll to the bottom of the email to see the attachment. Download the attachment  m1config.txt .",
            "title": "Download m1config.txt from your email"
        },
        {
            "location": "/intelligence/diagnostics/#move-m1configtxt-to-board",
            "text": "Copy the file you received in your email to the S5D9 you have connected to your computer with USB.   You can optionally verify that the contents of the file on the S5D9 board match the \ncontents of the file on your workstation.  After the board boots the LED light will be solid green.",
            "title": "Move m1config.txt to board"
        },
        {
            "location": "/intelligence/diagnostics/#log-into-renesa-iot-sandbox-data-intelligence",
            "text": "[https://renesas-na-sandbox.mediumone.com/login]   The login information is in a separate email.  After you log into the dashboard, select the project in the upper right. You named \nthe project during the activation step above.  You must also select a user from the drop down menu. It will be a long string of digits.     Once you have the user selected and can see the gauges, click on the  Save  button. Once\nyou Save the view, you do not have to select the user each time you log in.   There are two types of events sent from the board to Renesas IoT Sandbox:  Summary Events  These events are always sent every 15 minutes by default. A summary event contains the average values from each of the sensor readings within the past 15 minutes. The sensors included are temperature, pressure, humidity, noise level, and vibration stats. To change the frequency of these summary events, view Appendix A .  Threshold Events  These events are sent whenever a sensor reading passes a certain threshold.  To change these thresholds, view the Appendix A  At the top of the Dashboard, you will see a  Last Value Table widget . This widget only records the last entered value of that tag, along with the observed at timestamp (in UTC). You can use this widget to see the last time the board status was \u2018on\u2019 and the last values for city, country, firmware version, wan ip, lan ip, and mac address. For this tutorial, first make sure that your board is connected by seeing the rows filled with the value and timestamps. If there is nothing in the \u2018value\u2019 and \u2018last observed at\u2019 columns,  your board has had problems connecting to the cloud. You may need to click the refresh icon   After your board has been connected for at least 15 minutes, it\u2019s first summary event should be sent in. When this happens, the Gauge Widget on your Dashboard should be updated. These values are the averages of the sensor for the past 15 minutes. It will continue to be updated every time a summary event is received.  Next, you will see a Table widget. This widget presents all the data from the Humidity, Noise, Pressure, and Temperature sensors sorted by most recent. Using this widget, you can see the sensor value changes over time as well as the last time the board sent an \u2018online event\u2019. Click the refresh button    Under the table widget is the Cross Filter Widget. This widget displays board vibration data for the past day. Furthermore, you can add filters based on time range and vibration levels. To see refresh the widget and see updated data, click the refresh button .To customize this widget, view the diagram below and the captions that correspond to the numbers.    User selector. Here, you select the randomly generated username for your board. The red box next to it is the Tag selector. By default, it is \u2018processed.vibration_status\u2019.  Date selector. By default, it is the past 24 hours. You can customize the date range.  Filter charts. These charts are used to filter your data in the main chart (#4).  Main chart. Your values for the selected tag are displayed in this chart. You can filter the data by time of date, date range, and values by the filter charts (#3)   The last pre-set widget on the Dashboard is the User Input Widget. This widget does not display data but instead allows you to send data. For this tutorial, you will use this widget to control the LEDs in the next step. You will also use this widget to send a sample report later.   To learn more about widgets, check out Medium One's  Dashboard Widgets Documentation .",
            "title": "Log Into Renesa IoT Sandbox Data Intelligence"
        },
        {
            "location": "/intelligence/diagnostics/#led-toggle-and-blink",
            "text": "Now we will send events from the cloud to the board to toggle and blink the LED lights.  Blink  On the User Input widget, go to the box that says \u2018Blink\u2019. Type in the number of times you wish to make the LED blink; for demo purposes, pick a number under 10, then click \u2018Send Event\u2019.  The red LED on the board will blink the number of times you specified. You should also see this event appear in the  Real Time Events Stream widget .    Toggle  On the User Input widget, go to the box that says \u2018Toggle\u2019. To turn on the yellow LED, type in \u20181\u2019.  Click \u2018Send Event\u2019. You should see this event appear in the Real Time Events Stream Widget. The yellow LED on the board will also turn on. To turn it off, type in \u20180\u2019 and click \u2018Send Event\u2019. If any number other than 0 or 1 is used, it will change states from off to on or vice versa.  To learn more about how toggle and blink works, view the \u2018LED Toggle and Blink\u2019 Workflow in Workflow Studio or view Appendix B .",
            "title": "LED Toggle and Blink"
        },
        {
            "location": "/intelligence/diagnostics/#daily-email-report",
            "text": "The first step to set up your daily report is to add your email to the workflow. To do this on Renesas IoT Sandbox, click on \u2018Workflow Studio\u2019 on the sidebar. Next, click on the \u2018Daily Report\u2019 workflow:   Inside of the workflow:   Double-click on \u2018Base Python\u2019 to edit this workflow\u2019s code. After the import lines, you should see a line:  \u201crecipients = \u2018email@mediumone.com\u2019\u201d  Change the email to your email. Click \u2018Save and Activate\u2019.   Now that you\u2019ve got your email in the workflow, you can trigger the workflow to get a report. By default, the workflow is triggered daily at midnight (PT). If you wish to change this time, double-click the box labeled \u2018Daily\u2019 and change the settings there. For the tutorial, we will trigger this workflow now by sending the event {\u201csample_report\u201d: 0} through the Dashboard.  Back on the Dashboard, scroll down until you see the User Input widget like below. Select your board\u2019s username on the user dropdown.  To trigger the Daily Report Workflow, click the \u2018Send Event\u2019 button that is under \u2018Send Sample Report\u2019.  After a few seconds, you should have received a Daily Report in your email with statistics of the past 24 hours.    This report shows Temperature, Pressure, Humidity, Noise, and Vibration levels in Bar Charts. The sensor values are averaged and bucketed per hour.  There are also two pie charts that show the vibration status and board online status percentage. Lastly, there is a Geo map that provides your location based off of your ip address. Here is a sample report:",
            "title": "Daily Email Report"
        },
        {
            "location": "/intelligence/tutorials/",
            "text": "Additional Data Intelligence Tutorials\n\n\n\n\nDiagnostics Intelligence\n - Extended version of  tutorial in this hacking guide\n\n\nAnomaly Monitoring\n\n\nEquipment Anomaly Detection with Zendesk Integration\n\n\nNoise Level Detection and Mobile App",
            "title": "Additional Data Intelligence Tutorials"
        },
        {
            "location": "/intelligence/tutorials/#additional-data-intelligence-tutorials",
            "text": "Diagnostics Intelligence  - Extended version of  tutorial in this hacking guide  Anomaly Monitoring  Equipment Anomaly Detection with Zendesk Integration  Noise Level Detection and Mobile App",
            "title": "Additional Data Intelligence Tutorials"
        },
        {
            "location": "/synergy/custom/",
            "text": "Creating a Custom Board Image\n\n\nCaution and Warning\n\n\nBefore you replace the board image, make sure you can \n\nrestore the board with the factory image\n.\nIf you can't restore your board, you may brick the board. \n\n\nYou will lose this functionality (which can be restored):\n\n\n\n\nData Monitoring dashboard (Bug Labs) access will be wiped\n\n\nData Intelligence (Medium One) binaries will not load from the \nPut binary here\n folder\n\n\nYou will lose all factory bootloader functionality (the \nupdate.txt\n method will no longer work)\n\n\nYou will lose any data and files stored to flash\n\n\n\n\nDo not use this method unless you are comfortable with embedded development and feel \nconfident that you can restore your board\n\n\nHardware Software Requirements\n\n\nAfter you are confident you can restore your factory system image, acquire these components.\n\n\n C/C++ development tools \n\n\n\n\nSynergy Software Package (SSP)\n\n\ne2 Studio ISDE\n\n\n\n\n Debug and Flash \n\n\n\n\nJ-Link Software\n pack that contains J-Flash Lite\n\n\nSEGGER J-Link JTAG debugger\n\n\n\n\nI am using the J-Link JTAG debugger that was included in the Renesas S3A7 IoT Fast Prototyping Kit.\nThe S5D9 IoT Fast Prototyping Kit does not come with a J-Link JTAG debugger and is intended to be\nused with the existing bootloader. You can still use Synergy to create custom \n.srec\n files with the\nexisting bootloader and you don't need a J-Link debugger. This section is primarily for people\nthat already have a J-Link JTAG debugger and don't need to buy a new one.\n\n\n\n\nThe USB on the S5D9 is only for power. The J-Flash board connects to your computer with USB. Once\nthe board is connected to your computer with USB, you can use the e2 Studio debugger tools and \ntransfer the \n.srec\n file from inside of e2 Studio. You can also set break points and step through\nyour code.\n\n\n\n\ne2 Studio and SSP\n\n\nInstall e2 studio. I'm using 5.4.0.018.  (\ndownload\n).\n\n\nInstall SSP. I'm using v1.2.1 (\ndownload\n). \n\n\n\n\nSoftware Configuration\n\n\nYou will need the \nS5D9 IoT Fast Protyping Kit Board Support Package (BSP)\n.\n\n\nPut the file into your e2 Studio Packs folder\n\n\nThe default install location is:\n\n\nC:\\Renesas\\e2_studio\\internal\\projectgen\\arm\\Packs",
            "title": "Image Dev Tools"
        },
        {
            "location": "/synergy/custom/#creating-a-custom-board-image",
            "text": "",
            "title": "Creating a Custom Board Image"
        },
        {
            "location": "/synergy/custom/#caution-and-warning",
            "text": "Before you replace the board image, make sure you can  restore the board with the factory image .\nIf you can't restore your board, you may brick the board.   You will lose this functionality (which can be restored):   Data Monitoring dashboard (Bug Labs) access will be wiped  Data Intelligence (Medium One) binaries will not load from the  Put binary here  folder  You will lose all factory bootloader functionality (the  update.txt  method will no longer work)  You will lose any data and files stored to flash   Do not use this method unless you are comfortable with embedded development and feel \nconfident that you can restore your board",
            "title": "Caution and Warning"
        },
        {
            "location": "/synergy/custom/#hardware-software-requirements",
            "text": "After you are confident you can restore your factory system image, acquire these components.   C/C++ development tools    Synergy Software Package (SSP)  e2 Studio ISDE    Debug and Flash    J-Link Software  pack that contains J-Flash Lite  SEGGER J-Link JTAG debugger   I am using the J-Link JTAG debugger that was included in the Renesas S3A7 IoT Fast Prototyping Kit.\nThe S5D9 IoT Fast Prototyping Kit does not come with a J-Link JTAG debugger and is intended to be\nused with the existing bootloader. You can still use Synergy to create custom  .srec  files with the\nexisting bootloader and you don't need a J-Link debugger. This section is primarily for people\nthat already have a J-Link JTAG debugger and don't need to buy a new one.   The USB on the S5D9 is only for power. The J-Flash board connects to your computer with USB. Once\nthe board is connected to your computer with USB, you can use the e2 Studio debugger tools and \ntransfer the  .srec  file from inside of e2 Studio. You can also set break points and step through\nyour code.",
            "title": "Hardware Software Requirements"
        },
        {
            "location": "/synergy/custom/#e2-studio-and-ssp",
            "text": "Install e2 studio. I'm using 5.4.0.018.  ( download ).  Install SSP. I'm using v1.2.1 ( download ).",
            "title": "e2 Studio and SSP"
        },
        {
            "location": "/synergy/custom/#software-configuration",
            "text": "You will need the  S5D9 IoT Fast Protyping Kit Board Support Package (BSP) .  Put the file into your e2 Studio Packs folder  The default install location is:  C:\\Renesas\\e2_studio\\internal\\projectgen\\arm\\Packs",
            "title": "Software Configuration"
        },
        {
            "location": "/synergy/blinky/",
            "text": "Building a Custom Blinky\n\n\nBlinky is the Hello World of embedded boards. This will replace your factory image\nwith a new custom image that makes the onboard LEDs blink. Before you go any \nfurther, verify that you can restore the factory image of your board. Read the\noverview of \ncreating a custom board image\n.\n\n\ne2 Studio\n\n\nStart e2 Studio.\n\n\nCreate a new workspace.\n\n\n\n\nGo to the Workbench.\n\n\n\n\nGo to the Project Explorer view.\n\n\n\n\nFile -> New - Synergy C Project\n\n\n\n\nSpecify a project name.\n\n\n\n\nConfigure your Synergy Project\n\n\n\n\nImportant:\n Your board must be S5D9_IOT_ENABLER. If this option does not come up, you\nwill need to install the Board Support Package. See the previous section on \n\nSoftware Configuration\n\n\nSelect Blinky as the Project Template.\n\n\n\n\nEnter the Synergy Configuration perspective and look for the BSP tab.\n\n\n\n\nIn the BSP tab, make sure you have the proper Board and Device.\n\n\n\n\nSelect Build.\n\n\n\n\nThe \n.srec\n file will be placed in the \nDebug\n folder.\n\n\n\n\nIf your board is connected to the J-Link debugger, can now press Debug and the binary will move over to your board. \n\n\nYou can also use a separate tool called, J-Flash Lite. To make the process easier to learn as a \nstep by step process, I'm going to\nbreak the process into two steps, build and then flash. I'm going to show you how to use J-Flash Lite to\nto move the binary over. When you're actively building and debugging, you can use e2 Studio to manage\nthe process automatically.\n\n\nUsing J-Flash Lite\n\n\nConnect debugger board\n\n\n\n\nConnect debugger board to Windows workstation with USB cable\n\n\nConnect debugger board to Renesas S5D9 board with ribbon cable and JTAG connector\n\n\nConnect Renesas S5D9 board to USB power source (such as your computer's USB port)\n\n\n\n\n\n\nConfigure J-Flash Lite\n\n\nOpen J-Flash Lite. If you do not have J-Flash Lite installed, download the \nJ-Link Software\n pack from SEGGER.\n\n\n\n\nWhen J-Flash starts, you'll need to specific the Device and Interface. You may also need to\nupdate your driver.\n\n\n\n\nPlug in the SEGGER debugger board into your Windows computer and it will automatically\ninstall the J-Link driver.\n\n\n\n\nUpdate the driver (optional).\n\n\n\n\nThe specific Renesas MCU used in the S5D9 IoT Fast Prototyping Kit is:\n\n\nR7FS5D97E2A01CLK\n\n\n\nSelect Renesas, R7FS5D97E.\n\n\n\n\nSelect JTAG for Interface.\n\n\n\n\nSelect the \n.srec\n binary to upload.\n\n\n\n\nFlash the board. See the blink. The default blinky flashes all three LEDs.",
            "title": "Creating a new Blinky image"
        },
        {
            "location": "/synergy/blinky/#building-a-custom-blinky",
            "text": "Blinky is the Hello World of embedded boards. This will replace your factory image\nwith a new custom image that makes the onboard LEDs blink. Before you go any \nfurther, verify that you can restore the factory image of your board. Read the\noverview of  creating a custom board image .",
            "title": "Building a Custom Blinky"
        },
        {
            "location": "/synergy/blinky/#e2-studio",
            "text": "Start e2 Studio.  Create a new workspace.   Go to the Workbench.   Go to the Project Explorer view.   File -> New - Synergy C Project   Specify a project name.   Configure your Synergy Project   Important:  Your board must be S5D9_IOT_ENABLER. If this option does not come up, you\nwill need to install the Board Support Package. See the previous section on  Software Configuration  Select Blinky as the Project Template.   Enter the Synergy Configuration perspective and look for the BSP tab.   In the BSP tab, make sure you have the proper Board and Device.   Select Build.   The  .srec  file will be placed in the  Debug  folder.   If your board is connected to the J-Link debugger, can now press Debug and the binary will move over to your board.   You can also use a separate tool called, J-Flash Lite. To make the process easier to learn as a \nstep by step process, I'm going to\nbreak the process into two steps, build and then flash. I'm going to show you how to use J-Flash Lite to\nto move the binary over. When you're actively building and debugging, you can use e2 Studio to manage\nthe process automatically.",
            "title": "e2 Studio"
        },
        {
            "location": "/synergy/blinky/#using-j-flash-lite",
            "text": "",
            "title": "Using J-Flash Lite"
        },
        {
            "location": "/synergy/blinky/#connect-debugger-board",
            "text": "Connect debugger board to Windows workstation with USB cable  Connect debugger board to Renesas S5D9 board with ribbon cable and JTAG connector  Connect Renesas S5D9 board to USB power source (such as your computer's USB port)",
            "title": "Connect debugger board"
        },
        {
            "location": "/synergy/blinky/#configure-j-flash-lite",
            "text": "Open J-Flash Lite. If you do not have J-Flash Lite installed, download the  J-Link Software  pack from SEGGER.   When J-Flash starts, you'll need to specific the Device and Interface. You may also need to\nupdate your driver.   Plug in the SEGGER debugger board into your Windows computer and it will automatically\ninstall the J-Link driver.   Update the driver (optional).   The specific Renesas MCU used in the S5D9 IoT Fast Prototyping Kit is:  R7FS5D97E2A01CLK  Select Renesas, R7FS5D97E.   Select JTAG for Interface.   Select the  .srec  binary to upload.   Flash the board. See the blink. The default blinky flashes all three LEDs.",
            "title": "Configure J-Flash Lite"
        },
        {
            "location": "/synergy/blinkymods/",
            "text": "This will guide you through simple modifications of the blinky template application\nto get more familiar with editing C code with e2 Studio and transferring the binary\nto your board.\n\n\nModify Blink Rate\n\n\nIn \nhal_entry.c\n change the \nbsp_delay_units_t\n to your favorite millisecond delay. I'm using 500ms delay.\n\n\n\n\nLook for \nbsp_delay_units\n. \n\n\n\n\n\n\n\nModifying Which LED Blinks\n\n\nin \nhal_entry.c\n comment out the \nfor\n loop that displays all LEDs and select the LEDs you want to blink with one or more of these array elements:\n\n\n\n\nleds.p_leds[0]\n\n\nleds.p_leds[1]\n\n\n'leds.p_leds[2]`\n\n\n\n\n\n\nI'm going to flash only the green LED, \nleds.p_leds[0]\n\n\n\n\n\nAlternating Blink between two LEDs\n\n\nIn order to alternate LEDs, you need to flip the state of at least LED. If the LED is \non\n then turn it off.\nIf you use one statement to flip all the LEDs to on, then all LEDs will go on, regardless of the\ninitial state. In this example, the level is a boolean variable. \n\n\nI'm using the template conditional to flip the third LED and have a different conditional to\nchange the state of the first LED. \n\n\nThis is just to show you the old code and the new code in the same snippet. \n\n\nAll LEDs are off when the board boots. If I set the first LED to true, then led[0] and led[2] will alternate.\n\n\n bool level_0 = true;\n\n    while(1)\n    {\n\n\n        /* Determine the next state of the LEDs */\n        if(IOPORT_LEVEL_LOW == level)\n        {\n            level = IOPORT_LEVEL_HIGH;\n        }\n        else\n        {\n            level = IOPORT_LEVEL_LOW;\n        }\n\n        /* Update all board LEDs */\n//        for(uint32_t i = 0; i < leds.led_count; i++)\n//        {\n//            g_ioport.p_api->pinWrite(leds.p_leds[i], level);\n//        }\n\n        g_ioport.p_api->pinWrite(leds.p_leds[2], level);\n        g_ioport.p_api->pinWrite(leds.p_leds[0], level_0);\n\n        if(level_0)\n        {\n            level_0 = false;\n        }\n        else\n        {\n            level_0 = true;\n        }\n\n        /* Delay */\n        R_BSP_SoftwareDelay(delay, bsp_delay_units);\n    }",
            "title": "Modding Blinky"
        },
        {
            "location": "/synergy/blinkymods/#modify-blink-rate",
            "text": "In  hal_entry.c  change the  bsp_delay_units_t  to your favorite millisecond delay. I'm using 500ms delay.   Look for  bsp_delay_units .",
            "title": "Modify Blink Rate"
        },
        {
            "location": "/synergy/blinkymods/#modifying-which-led-blinks",
            "text": "in  hal_entry.c  comment out the  for  loop that displays all LEDs and select the LEDs you want to blink with one or more of these array elements:   leds.p_leds[0]  leds.p_leds[1]  'leds.p_leds[2]`    I'm going to flash only the green LED,  leds.p_leds[0]",
            "title": "Modifying Which LED Blinks"
        },
        {
            "location": "/synergy/blinkymods/#alternating-blink-between-two-leds",
            "text": "In order to alternate LEDs, you need to flip the state of at least LED. If the LED is  on  then turn it off.\nIf you use one statement to flip all the LEDs to on, then all LEDs will go on, regardless of the\ninitial state. In this example, the level is a boolean variable.   I'm using the template conditional to flip the third LED and have a different conditional to\nchange the state of the first LED.   This is just to show you the old code and the new code in the same snippet.   All LEDs are off when the board boots. If I set the first LED to true, then led[0] and led[2] will alternate.   bool level_0 = true;\n\n    while(1)\n    {\n\n\n        /* Determine the next state of the LEDs */\n        if(IOPORT_LEVEL_LOW == level)\n        {\n            level = IOPORT_LEVEL_HIGH;\n        }\n        else\n        {\n            level = IOPORT_LEVEL_LOW;\n        }\n\n        /* Update all board LEDs */\n//        for(uint32_t i = 0; i < leds.led_count; i++)\n//        {\n//            g_ioport.p_api->pinWrite(leds.p_leds[i], level);\n//        }\n\n        g_ioport.p_api->pinWrite(leds.p_leds[2], level);\n        g_ioport.p_api->pinWrite(leds.p_leds[0], level_0);\n\n        if(level_0)\n        {\n            level_0 = false;\n        }\n        else\n        {\n            level_0 = true;\n        }\n\n        /* Delay */\n        R_BSP_SoftwareDelay(delay, bsp_delay_units);\n    }",
            "title": "Alternating Blink between two LEDs"
        },
        {
            "location": "/design/files/",
            "text": "Designing Your Own Board\n\n\n\n\nDownload\n the open source design \nfiles\n to use as a starting point.\n\n\n\n\nRenesas often uses Altium Designer, but you can use any PCB design software. Altium and Gerber files\nare provided.",
            "title": "Download design files"
        },
        {
            "location": "/design/files/#designing-your-own-board",
            "text": "Download  the open source design  files  to use as a starting point.   Renesas often uses Altium Designer, but you can use any PCB design software. Altium and Gerber files\nare provided.",
            "title": "Designing Your Own Board"
        },
        {
            "location": "/design/manufacturing/",
            "text": "Manufacturing Your Own PCB Boards\n\n\nRecommend \nSeeed Studio Fusion\n. You can \nuse any manufacturer. Renesas used Seeed Studio for the S5D9 IoT Fast Prototyping Kit.\n\n\nRead \nPCB Design for Manufacture\n by seeedstudio.\n\n\nSubmit your modified Gerber files to the \nSeeed PCB/PCBA site\n\n\nCommunity member @Serdnleb reported this on a generic PCB order, NOT the S5D9 order. Your costs per board\nwill likely be higher as you'll probably use more than 2 layers. This example is just to give you a feel \nfor lowest costs based on a real-world community experience.\n\n\n\n\nI've used Seeed Fusion service a few times in the past. They are especially good if you need several of the same board as they send 10 copies at very low price. The boards are very nice quality. I live in the UK and got the boards about a week after placing my order. If you need fast shipping you can go with DHL but is a bit more expensive.\n\n\nMy latest order from Seeed, to manufacture 10 pieces of 2\u2212layer white PCB boards cost $4.9USD in total. This will cost $27USD in total to manufacture and ship to UK through DHL within 11 days.\n\n\nJune, 2017 @Serdnleb",
            "title": "Manufacturing and assembly"
        },
        {
            "location": "/design/manufacturing/#manufacturing-your-own-pcb-boards",
            "text": "Recommend  Seeed Studio Fusion . You can \nuse any manufacturer. Renesas used Seeed Studio for the S5D9 IoT Fast Prototyping Kit.  Read  PCB Design for Manufacture  by seeedstudio.  Submit your modified Gerber files to the  Seeed PCB/PCBA site  Community member @Serdnleb reported this on a generic PCB order, NOT the S5D9 order. Your costs per board\nwill likely be higher as you'll probably use more than 2 layers. This example is just to give you a feel \nfor lowest costs based on a real-world community experience.   I've used Seeed Fusion service a few times in the past. They are especially good if you need several of the same board as they send 10 copies at very low price. The boards are very nice quality. I live in the UK and got the boards about a week after placing my order. If you need fast shipping you can go with DHL but is a bit more expensive.  My latest order from Seeed, to manufacture 10 pieces of 2\u2212layer white PCB boards cost $4.9USD in total. This will cost $27USD in total to manufacture and ship to UK through DHL within 11 days.  June, 2017 @Serdnleb",
            "title": "Manufacturing Your Own PCB Boards"
        }
    ]
}